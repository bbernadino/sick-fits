{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bailey\\\\Desktop\\\\sick-fits\\\\frontend\\\\components\\\\SignIn.js\";\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY } from './User';\nconst SIGN_IN_MUTATION = gql`\n  mutation SIGN_IN_MUTATION($email: String!, $password: String!) {\n    authenticateUserWithPassword(email: $email, password: $password) {\n      ... on UserAuthenticationWithPasswordSuccess {\n        item {\n          id\n          email\n          name\n        }\n      }\n      ... on UserAuthenticationWithPasswordFailure {\n        code\n        message\n      }\n    }\n  }\n`;\nexport default function SignIn() {\n  var _data$authenticateUse;\n\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: '',\n    password: ''\n  });\n  const [signin, {\n    data,\n    error,\n    loading\n  }] = useMutation(SIGN_IN_MUTATION, {\n    variables: inputs,\n    // refetch the currently logged in user\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    console.log(inputs);\n    const res = await signin();\n    console.log(res);\n    resetForm(); // send email and pass to graphQL api\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Into Your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: data === null || data === void 0 ? void 0 : (_data$authenticateUse = data.authenticateUserWithPassword) === null || _data$authenticateUse === void 0 ? void 0 : _data$authenticateUse.UserAuthenticationWithPasswordFailure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign In!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Bailey/Desktop/sick-fits/frontend/components/SignIn.js"],"names":["gql","useMutation","Form","useForm","CURRENT_USER_QUERY","SIGN_IN_MUTATION","SignIn","inputs","handleChange","resetForm","email","password","signin","data","error","loading","variables","refetchQueries","query","handleSubmit","e","preventDefault","console","log","res","authenticateUserWithPassword","UserAuthenticationWithPasswordFailure"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AAEA,MAAMC,gBAAgB,GAAGL,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,eAAe,SAASM,MAAT,GAAkB;AAAA;;AAC/B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAsCN,OAAO,CAAC;AAClDO,IAAAA,KAAK,EAAE,EAD2C;AAElDC,IAAAA,QAAQ,EAAE;AAFwC,GAAD,CAAnD;AAKA,QAAM,CAACC,MAAD,EAAS;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAT,IAAqCd,WAAW,CAACI,gBAAD,EAAmB;AACvEW,IAAAA,SAAS,EAAET,MAD4D;AAEvE;AACAU,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEd;AAAT,KAAD;AAHuD,GAAnB,CAAtD;;AAMA,iBAAee,YAAf,CAA4BC,CAA5B,EAA+B;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACA,UAAMiB,GAAG,GAAG,MAAMZ,MAAM,EAAxB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAf,IAAAA,SAAS,GALoB,CAM7B;AACD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAEU,YAA9B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EACHN,IADG,aACHA,IADG,gDACHA,IAAI,CAAEY,4BADH,0DACH,sBACIC;AAHR;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,oBAHd;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,KAAK,EAAEnB,MAAM,CAACG,KALhB;AAME,UAAA,QAAQ,EAAEF;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,4CAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,UAHd;AAIE,UAAA,YAAY,EAAC,UAJf;AAKE,UAAA,KAAK,EAAED,MAAM,CAACI,QALhB;AAME,UAAA,QAAQ,EAAEH;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAwBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/client';\r\nimport Form from './styles/Form';\r\nimport useForm from '../lib/useForm';\r\nimport { CURRENT_USER_QUERY } from './User';\r\n\r\nconst SIGN_IN_MUTATION = gql`\r\n  mutation SIGN_IN_MUTATION($email: String!, $password: String!) {\r\n    authenticateUserWithPassword(email: $email, password: $password) {\r\n      ... on UserAuthenticationWithPasswordSuccess {\r\n        item {\r\n          id\r\n          email\r\n          name\r\n        }\r\n      }\r\n      ... on UserAuthenticationWithPasswordFailure {\r\n        code\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function SignIn() {\r\n  const { inputs, handleChange, resetForm } = useForm({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [signin, { data, error, loading }] = useMutation(SIGN_IN_MUTATION, {\r\n    variables: inputs,\r\n    // refetch the currently logged in user\r\n    refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n  });\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(inputs);\r\n    const res = await signin();\r\n    console.log(res);\r\n    resetForm();\r\n    // send email and pass to graphQL api\r\n  }\r\n\r\n  return (\r\n    <Form method=\"POST\" onSubmit={handleSubmit}>\r\n      <h2>Sign Into Your Account</h2>\r\n      <Error\r\n        error={\r\n          data?.authenticateUserWithPassword\r\n            ?.UserAuthenticationWithPasswordFailure\r\n        }\r\n      />\r\n      <fieldset>\r\n        <label htmlFor=\"email\">\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Your Email Address\"\r\n            autoComplete=\"email\"\r\n            value={inputs.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"password\">\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            autoComplete=\"password\"\r\n            value={inputs.password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Sign In!</button>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}